
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.10.1
 * Query Engine version: 9b628578b3b7cae625e8c927178f15a170e74a9c
 */
Prisma.prismaVersion = {
  client: "6.10.1",
  engine: "9b628578b3b7cae625e8c927178f15a170e74a9c"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  email: 'email',
  hash: 'hash',
  username: 'username',
  role: 'role',
  isPremium: 'isPremium',
  provider: 'provider',
  photo: 'photo',
  courseId: 'courseId'
};

exports.Prisma.UserProfileImageScalarFieldEnum = {
  id: 'id',
  path: 'path',
  userId: 'userId'
};

exports.Prisma.CourseScalarFieldEnum = {
  id: 'id',
  creatorId: 'creatorId',
  title: 'title',
  category: 'category',
  level: 'level',
  description: 'description',
  duration: 'duration',
  studentsCount: 'studentsCount',
  rating: 'rating',
  likes: 'likes',
  completions: 'completions',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CourseLikeScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  courseId: 'courseId',
  createdAt: 'createdAt'
};

exports.Prisma.UserCourseProgressScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  courseId: 'courseId',
  currentStep: 'currentStep',
  completed: 'completed',
  startedAt: 'startedAt',
  updatedAt: 'updatedAt',
  rating: 'rating'
};

exports.Prisma.CourseModuleScalarFieldEnum = {
  id: 'id',
  courseId: 'courseId',
  title: 'title',
  number: 'number'
};

exports.Prisma.UserModuleProgressScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  courseModuleId: 'courseModuleId',
  currentStep: 'currentStep',
  completed: 'completed',
  startedAt: 'startedAt',
  updatedAt: 'updatedAt',
  courseId: 'courseId'
};

exports.Prisma.VideoScalarFieldEnum = {
  id: 'id',
  courseId: 'courseId',
  title: 'title',
  number: 'number',
  url: 'url'
};

exports.Prisma.MiniModuleScalarFieldEnum = {
  id: 'id',
  courseModuleId: 'courseModuleId',
  title: 'title',
  number: 'number'
};

exports.Prisma.MiniModuleProgressScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  miniModuleId: 'miniModuleId',
  currentStep: 'currentStep',
  completed: 'completed',
  startedAt: 'startedAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.LessonScalarFieldEnum = {
  id: 'id',
  title: 'title',
  explanation: 'explanation',
  more: 'more',
  example: 'example',
  note: 'note',
  assignment: 'assignment',
  number: 'number',
  miniModuleId: 'miniModuleId'
};

exports.Prisma.LessonVideoScalarFieldEnum = {
  id: 'id',
  title: 'title',
  number: 'number',
  url: 'url',
  miniModuleId: 'miniModuleId'
};

exports.Prisma.LessonSolutionScalarFieldEnum = {
  id: 'id',
  solution: 'solution',
  lessonId: 'lessonId'
};

exports.Prisma.UserLessonProgressScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  lessonId: 'lessonId',
  currentStep: 'currentStep',
  completed: 'completed',
  startedAt: 'startedAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CourseRatingScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  courseId: 'courseId',
  rating: 'rating',
  comment: 'comment',
  createdAt: 'createdAt'
};

exports.Prisma.ChallengeScalarFieldEnum = {
  id: 'id',
  difficulty: 'difficulty',
  title: 'title',
  description: 'description',
  relation: 'relation',
  duration: 'duration',
  likes: 'likes'
};

exports.Prisma.ChallengeLikeScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  challengeId: 'challengeId'
};

exports.Prisma.ChallengeInstructionsScalarFieldEnum = {
  id: 'id',
  number: 'number',
  instruction: 'instruction',
  challengeId: 'challengeId'
};

exports.Prisma.ChallengeSolutionsScalarFieldEnum = {
  id: 'id',
  number: 'number',
  solution: 'solution',
  challengeId: 'challengeId'
};

exports.Prisma.CompletedChallengesScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  challengeId: 'challengeId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Role = exports.$Enums.Role = {
  ADMIN: 'ADMIN',
  USER: 'USER',
  SUPERADMIN: 'SUPERADMIN'
};

exports.Level = exports.$Enums.Level = {
  BEGINNER: 'BEGINNER',
  INTERMEDIATE: 'INTERMEDIATE',
  ADVANCED: 'ADVANCED'
};

exports.Prisma.ModelName = {
  User: 'User',
  UserProfileImage: 'UserProfileImage',
  Course: 'Course',
  CourseLike: 'CourseLike',
  UserCourseProgress: 'UserCourseProgress',
  CourseModule: 'CourseModule',
  userModuleProgress: 'userModuleProgress',
  Video: 'Video',
  MiniModule: 'MiniModule',
  MiniModuleProgress: 'MiniModuleProgress',
  Lesson: 'Lesson',
  LessonVideo: 'LessonVideo',
  LessonSolution: 'LessonSolution',
  UserLessonProgress: 'UserLessonProgress',
  CourseRating: 'CourseRating',
  Challenge: 'Challenge',
  ChallengeLike: 'ChallengeLike',
  ChallengeInstructions: 'ChallengeInstructions',
  ChallengeSolutions: 'ChallengeSolutions',
  CompletedChallenges: 'CompletedChallenges'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
